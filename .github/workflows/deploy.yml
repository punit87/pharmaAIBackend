name: Deploy Docker Images

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag'
        required: false
        default: 'latest'
      build_rag_anything:
        description: 'Build RAG-Anything image with all features'
        required: false
        default: true
        type: boolean
      rag_anything_parser:
        description: 'RAG-Anything parser selection'
        required: false
        default: 'docling'
        type: choice
        options:
          - docling
          - mineru

env:
  REGISTRY: ghcr.io

jobs:
  build-rag-anything:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.build_rag_anything != 'false' }}
    permissions:
      contents: read
      packages: write

    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create RAG-Anything Dockerfile
      run: |
        mkdir -p rag-anything
        cat > rag-anything/Dockerfile << 'EOF'
        # RAG-Anything with Docling parser (no LibreOffice dependency)
        FROM python:3.11-slim
        
        # Build arguments
        ARG RAG_PARSER=docling
        
        # Install system dependencies
        RUN apt-get update && apt-get install -y \
            git \
            curl \
            wget \
            build-essential \
            && rm -rf /var/lib/apt/lists/*
        
        # Install uv
        RUN pip install uv
        
        # Set working directory
        WORKDIR /app
        
        # Install RAG-Anything from PyPI with all features
        RUN pip install 'raganything[all]' --system
        
        # Install Docling for document parsing
        RUN pip install docling --system
        
        # Create a simple entrypoint script
        RUN echo '#!/bin/bash\n\
        echo "RAG-Anything with Docling is ready!"\n\
        echo "Available commands:"\n\
        echo "  python -c \"import raganything; print(\\\"RAG-Anything imported successfully\\\")\""\n\
        echo "  python -c \"from raganything import RAGAnything; print(\\\"RAGAnything class available\\\")\""\n\
        echo "  python -c \"import docling; print(\\\"Docling imported successfully\\\")\""\n\
        echo "  python -c \"from docling.document_converter import DocumentConverter; print(\\\"DocumentConverter available\\\")\""\n\
        echo "  python -c \"from PIL import Image; print(\\\"Pillow available\\\")\""\n\
        echo "  python -c \"import reportlab; print(\\\"ReportLab available\\\")\""\n\
        exec "$@"' > /app/entrypoint.sh && chmod +x /app/entrypoint.sh
        
        ENTRYPOINT ["/app/entrypoint.sh"]
        CMD ["python", "-c", "import raganything; print('RAG-Anything with Docling is ready!')"]
        EOF

    - name: Build and push RAG-Anything image
      uses: docker/build-push-action@v5
      with:
        context: ./rag-anything
        file: ./rag-anything/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        build-args: |
          RAG_PARSER=${{ github.event.inputs.rag_anything_parser || 'mineru' }}
        tags: |
          ${{ env.REGISTRY }}/punit87/rag-anything:latest
          ${{ env.REGISTRY }}/punit87/rag-anything:${{ github.sha }}
          ${{ env.REGISTRY }}/punit87/rag-anything:${{ github.ref_name }}
          ${{ github.event.inputs.tag != '' && format('{0}/punit87/rag-anything:{1}', env.REGISTRY, github.event.inputs.tag) || '' }}
        cache-from: type=gha
        cache-to: type=gha,mode=max


  summary:
    runs-on: ubuntu-latest
    needs: [build-rag-anything]
    if: always()

    steps:
    - name: Summary
      run: |
        echo "## ðŸš€ RAG-Anything Docker Image Deployed Successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### RAG-Anything (All Features + Docling Parser)" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ env.REGISTRY }}/punit87/rag-anything:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ env.REGISTRY }}/punit87/rag-anything:${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ env.REGISTRY }}/punit87/rag-anything:${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Features Included" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… RAG-Anything with all optional dependencies" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Docling parser for document processing" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Pillow for extended image format support" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… ReportLab for text file processing" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Support for PDF, DOCX, PPTX, XLSX, HTML, images" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Usage" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "# Pull RAG-Anything with Docling parser" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ env.REGISTRY }}/punit87/rag-anything:latest" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "# Run with Docling support" >> $GITHUB_STEP_SUMMARY
        echo "docker run --rm ${{ env.REGISTRY }}/punit87/rag-anything:latest" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
