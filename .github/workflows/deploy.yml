name: 🚀 Build Tesseract OCR Lambda Image
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: punit87/tesseract-lambda

jobs:
  build-tesseract-lambda:
    name: 🛠️ Build Tesseract OCR Lambda Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: 🧩 Checkout repository
        uses: actions/checkout@v4
        
      - name: ⚙️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: 🔐 Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 🐳 Build and Push Tesseract Lambda Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.tesseract
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
  summary:
    name: 🧾 Deployment Summary
    runs-on: ubuntu-latest
    needs: build-tesseract-lambda
    if: always()
    steps:
      - name: 🪶 Write Deployment Summary
        run: |
          {
            echo "## 🚀 Tesseract OCR Lambda Image Built Successfully"
            echo ""
            echo "### 🎯 Lambda Image Built"
            echo "- **Registry**: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\`"
            echo "- **Tags**: \`latest\`, \`${{ github.ref_name }}\`, \`${{ github.sha }}\`"
            echo "- **Architecture**: linux/amd64"
            echo "- **Platform**: AWS Lambda (Container Images)"
            echo ""
            echo "### ✨ Features"
            echo "- ✅ Tesseract OCR 5.x pre-installed"
            echo "- ✅ English language pack included"
            echo "- ✅ Python 3.11 Lambda runtime"
            echo "- ✅ Clean, minimal Tesseract-only image"
            echo "- ✅ Multi-stage build ready for import"
            echo "- ✅ Organized directory structure for easy copying"
            echo ""
            echo "### 📦 Image Contents"
            echo "- **Tesseract OCR**: Latest version with English support"
            echo "- **Language Data**: English language pack included"
            echo "- **Organized Structure**: Pre-prepared for multi-stage copying"
            echo "- **Environment Variables**: TESSDATA_PREFIX and Tesseract paths set"
            echo ""
            echo "### 🚀 Usage"
            echo "\`\`\`bash"
            echo "# Pull the image"
            echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
            echo ""
            echo "# Test locally"
            echo "docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
            echo "\`\`\`"
            echo ""
            echo "### 📝 Next Steps"
            echo "1. **Deploy to Lambda**: Use MCP API to create Lambda function"
            echo "2. **Configure S3**: Set up S3 triggers for document processing"
            echo "3. **Test OCR**: Upload documents and test Tesseract functionality"
            echo "4. **Customize**: Add your own Lambda handler code"
          } >> $GITHUB_STEP_SUMMARY