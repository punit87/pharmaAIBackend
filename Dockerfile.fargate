# RAG-Anything optimized for AWS Fargate
# Multi-stage build with optimized layer caching
FROM python:3.11-slim AS base

# Build arguments
ARG RAG_PARSER=docling

# ============================================
# System Dependencies Stage
# ============================================
FROM base AS system-deps

# Install all system dependencies in one layer for better caching
RUN apt-get update && apt-get install -y \
    git \
    curl \
    wget \
    build-essential \
    tesseract-ocr \
    tesseract-ocr-eng \
    libglib2.0-0 \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# ============================================
# Python Dependencies Stage
# ============================================
FROM system-deps AS python-deps

# Install uv first (most stable, cached layer)
RUN pip install --no-cache-dir uv

# Set working directory
WORKDIR /app

# Install Python packages in order of stability for better layer caching
# Core image processing libraries (stable)
RUN pip install --no-cache-dir pytesseract opencv-python-headless pillow

# FastAPI and web server (stable)
RUN pip install --no-cache-dir fastapi uvicorn[standard]

# RAG-Anything (large package, separate layer)
RUN pip install --no-cache-dir 'raganything[all]'

# Parser based on build argument (conditional layer)
RUN if [ "$RAG_PARSER" = "docling" ]; then \
        pip install --no-cache-dir docling; \
    else \
        pip install --no-cache-dir mineru; \
    fi

# ============================================
# Final Runtime Stage
# ============================================
FROM python-deps AS runtime

# Copy FastAPI application (changes frequently, so last)
COPY fargate_app.py /app/main.py

# Set environment variables for better performance
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    TESSDATA_PREFIX=/usr/share/tesseract-ocr/5/tessdata

# Expose port for Fargate
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Start FastAPI server
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8080"]
