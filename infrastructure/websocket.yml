Parameters:
  Environment:
    Type: String
    Description: Environment name
  ALBEndpoint:
    Type: String
    Description: ALB DNS Name for connecting to ECS tasks
  DocumentBucket:
    Type: String
    Description: S3 Bucket for document storage

Resources:
  # DynamoDB Table for WebSocket Connections
  WebSocketConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${Environment}-websocket-connections'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: connectionId
          AttributeType: S
      KeySchema:
        - AttributeName: connectionId
          KeyType: HASH
      TimeToLiveSpecification:
        Enabled: true
        AttributeName: ttl
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-websocket-connections'
        - Key: Environment
          Value: !Ref Environment

  # WebSocket API
  WebSocketApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Sub 'pharma-rag-websocket-${Environment}'
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"
      Description: WebSocket API for real-time document processing updates

  # WebSocket Integrations (HTTP backend - direct to ALB)
  WebSocketConnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketApi
      IntegrationType: HTTP
      IntegrationMethod: POST
      IntegrationUri: !Sub 'http://${ALBEndpoint}/websocket/connect'
      PayloadFormatVersion: '1.0'

  WebSocketDisconnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketApi
      IntegrationType: HTTP
      IntegrationMethod: POST
      IntegrationUri: !Sub 'http://${ALBEndpoint}/websocket/disconnect'
      PayloadFormatVersion: '1.0'

  WebSocketMessageIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketApi
      IntegrationType: HTTP
      IntegrationMethod: POST
      IntegrationUri: !Sub 'http://${ALBEndpoint}/websocket/message'
      PayloadFormatVersion: '1.0'

  # Routes
  WebSocketConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: $connect
      Target: !Sub 'integrations/${WebSocketConnectIntegration}'

  WebSocketDisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: $disconnect
      Target: !Sub 'integrations/${WebSocketDisconnectIntegration}'

  WebSocketMessageRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: $default
      Target: !Sub 'integrations/${WebSocketMessageIntegration}'

  # WebSocket Deployment
  WebSocketDeployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - WebSocketConnectRoute
      - WebSocketDisconnectRoute
      - WebSocketMessageRoute
    Properties:
      ApiId: !Ref WebSocketApi

  WebSocketStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref WebSocketApi
      StageName: !Ref Environment
      DeploymentId: !Ref WebSocketDeployment
      DefaultRouteSettings:
        ThrottlingBurstLimit: 100
        ThrottlingRateLimit: 50

Outputs:
  WebSocketApiEndpoint:
    Description: WebSocket API Endpoint
    Value: !Sub 'wss://${WebSocketApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}'
    Export:
      Name: !Sub '${AWS::StackName}-WebSocketEndpoint'

  WebSocketConnectionsTable:
    Description: WebSocket Connections Table Name
    Value: !Ref WebSocketConnectionsTable
    Export:
      Name: !Sub '${AWS::StackName}-WebSocketConnectionsTable'

