# ============================================
# Docling Lambda Image - AWS Python 3.12
# ============================================
FROM public.ecr.aws/lambda/python:3.12

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no" \
    HF_HOME=/tmp/ \
    TORCH_HOME=/tmp/ \
    EASYOCR_HOME=/tmp/easyocr \
    TESSDATA_PREFIX=/tmp/tessdata \
    OMP_NUM_THREADS=4

# Install build dependencies
RUN microdnf install -y \
    gcc \
    gcc-c++ \
    make \
    wget \
    tar \
    which \
    && microdnf clean all

# Install tesseract from source
RUN cd /tmp && \
    wget https://github.com/tesseract-ocr/tesseract/archive/5.3.0.tar.gz && \
    tar -xzf 5.3.0.tar.gz && \
    cd tesseract-5.3.0 && \
    ./autogen.sh && \
    ./configure && \
    make && \
    make install && \
    ldconfig && \
    cd / && \
    rm -rf /tmp/tesseract-5.3.0 /tmp/5.3.0.tar.gz

# Download English language data
RUN mkdir -p /usr/share/tesseract-ocr/5/tessdata && \
    cd /usr/share/tesseract-ocr/5/tessdata && \
    wget https://github.com/tesseract-ocr/tessdata/raw/main/eng.traineddata

# Create writable directories for models and data
RUN mkdir -p /tmp/easyocr /tmp/tessdata

# Install docling with CPU-only PyTorch
RUN pip install --no-cache-dir docling --extra-index-url https://download.pytorch.org/whl/cpu

# Download docling models
RUN docling-tools models download

# Copy Lambda handler code
COPY lambda_function.py ${LAMBDA_TASK_ROOT}/

# Lambda handler entrypoint
CMD ["lambda_function.lambda_handler"]


